plugins {
    id 'net.nemerosa.versioning' version '2.8.2'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'java-library'

configurations {
    plugin
}

dependencies {

    [
            project(':kernel-api'),
            project(':kernel-core'),
            project(':kernel-modules:synchronous-api'),
            project(':kernel-modules:sunshower-spring')

    ].each {
        implementation it
    }

    [
            project(':kernel-tests:kernel-test-common')
    ].each {
        testImplementation it
    }


    [
            'banner',
            'logging',
            'shell',
            'directory-scanner'
    ].each {
        implementation project(":kernel-modules:zephyr:zephyr-$it")
    }


    [
            'directory-scanner'
    ].each {
        plugin project(":kernel-modules:zephyr:zephyr-$it")
    }

//    [
//            ':kernel-modules:sunshower-yaml-reader'
//    ].each {
//        implementation project(it)
//    }

    testImplementation project(path: ':kernel-core', configuration: 'tests')
}


application {
    applicationName = 'zephyr'
    mainClassName = 'io.zephyr.kernel.launch.KernelLauncher'
}

task extractPlugins(type: Copy) {

    from configurations.plugin
    into "${projectDir}/zephyr/kernel/deployments"
}

build.dependsOn extractPlugins

startScripts {
    classpath = files("lib/*")
}

distZip {
    archiveName "zephyr-main.zip"
}

distTar {
    archiveName "zephyr-main.tar"
}

jar {
    manifest {
        attributes(
                'Kernel-Version': project.version,
                'Built-By': System.properties['user.name'],
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Revision': versioning.info.commit,
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk':
                        "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})"
                ,
                'Build-OS':
                        "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

//publishing {
//    publications {
//
//        applicationTar(MavenPublication) {
//            artifact source: distTar, classifier: 'tar', extension: 'tar'
//        }
//        applicationZip(MavenPublication) {
//            artifact source: distZip, classifier: 'zip', extension: 'zip'
//        }
//    }
//}
